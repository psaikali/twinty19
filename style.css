@charset "UTF-8";
/*
Theme Name: Twinty 19
Theme URI: https://saika.li
Template: twentynineteen
Author: Pierre SaÃ¯kali
Author URI: https://mosaika.fr
Description: It's like Twenty Nineteen, but slightly different.
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: simpleberg
Tags: gutenberg, resume, minimalist
This theme, like WordPress, is licensed under the GPL.
Based on Underscores http://underscores.me/, (C) 2012-2017 Automattic, Inc.
*/
/* If we add the border using a regular CSS border, it won't look good on non-retina devices,
 * since its edges can look jagged due to lack of antialiasing. In this case, we are several
 * layers of box-shadow to add the border visually, which will render the border smoother. */
body,
button,
input,
select,
optgroup,
textarea {
  font-family: "IBM Plex Serif", "Georgia", serif;
  font-weight: 400;
}

.main-navigation,
.page-description,
h2.author-title,
.not-found .page-title,
.error-404 .page-title,
.post-navigation .post-title,
.pagination .nav-links,
.comments-title,
.comment-author .fn,
.no-comments,
.site-title,
h1, h2, h3, h4, h5, h6 {
  font-family: "Montserrat", "Helvetica", sans-serif;
  font-weight: 300;
}

.site-info,
.page-description,
.post-navigation .post-title,
.comment-metadata,
.discussion-meta-info,
.entry-meta,
.entry-footer,
.comment-reply-link,
#cancel-comment-reply-link,
img:after,
.page-links,
.sticky-post {
  font-family: "IBM Plex Serif", "Georgia", serif;
}

.page-title {
  font-family: "IBM Plex Serif", "Georgia", serif;
}

blockquote cite {
  font-family: "IBM Plex Serif", "Georgia", serif;
}

.twinty {
  /**
	 * Masthead background styling
	 */
  /**
	 * Make header wide again
	 */
  /**
	 * Frontpage featured items
	 */
  /**
	 * @todo Remove that and override template files when parent theme development is stable
	 */
}

.twinty .site-header {
  /**
		 * Main nav
		 */
  /**
		 * Social icons
		 */
}

.twinty .site-header, .twinty .site-header .hentry:before, .twinty .site-header .hentry:after {
  background: #3778c2;
  background: linear-gradient(60deg, #3778c2 0%, #37b2c2 100%);
}

.twinty .site-header .site-title {
  font-size: 1.375rem;
}

.twinty .site-header .site-description {
  font-size: .75rem;
}

.twinty .site-header .main-navigation {
  margin-top: .325rem;
  font-size: .85rem;
  font-family: "IBM Plex Serif", "Georgia", serif;
}

.twinty .site-header .main-navigation ul.main-menu > li {
  margin-right: .625rem;
}

.twinty .site-header .main-navigation ul.main-menu > li > a {
  padding-bottom: .5em;
}

.twinty .site-header .main-navigation ul.main-menu > li > a:after {
  display: inline-block;
  content: ".";
}

.twinty .site-header .main-navigation ul.main-menu > li.menu-item-has-children {
  position: relative;
  padding-left: 1em;
}

.twinty .site-header .main-navigation ul.main-menu > li.menu-item-has-children > a + svg {
  color: #fff;
  position: absolute;
  left: .1em;
  top: 50%;
  width: 0.6em;
  height: 0.6em;
  margin-top: -0.3em;
  opacity: .6;
}

.twinty .site-header .main-navigation ul.main-menu > li.menu-item-has-children::after {
  display: none;
}

.twinty .site-header .main-navigation ul.main-menu > li.menu-item-has-children ul.sub-menu {
  left: 0;
  top: calc( 100% + .5rem);
  float: none;
  background: #fff;
  width: 10rem;
  box-shadow: 0px 12px 15px -8px rgba(0, 0, 15, 0.25);
  text-shadow: none;
}

.twinty .site-header .main-navigation ul.main-menu > li.menu-item-has-children ul.sub-menu li > a {
  font-size: .7rem;
  color: #111;
}

.twinty .site-header .main-navigation ul.main-menu > li.menu-item-has-children ul.sub-menu li > a:hover {
  background: #3778c2;
  color: #fff;
}

.twinty div.frontpage-intro-text {
  color: #fff;
  text-shadow: none;
}

.twinty div.frontpage-intro-text p {
  font-family: "Montserrat", "Helvetica", sans-serif;
  font-weight: 600;
}

.twinty .featured-items section.menu article.featured-item {
  background: #fff;
  margin: 0 0 1.5%;
  text-shadow: none;
}

.twinty .featured-items section.menu article.featured-item a {
  padding: .625rem 1rem 1rem;
  display: block;
  height: 100%;
  word-break: break-word;
  color: #111;
  position: relative;
}

.twinty .featured-items section.menu article.featured-item a:after {
  content: "";
  position: absolute;
  display: block;
  top: -0.2rem;
  left: 0;
  width: 0;
  height: 0.2rem;
  background: #fff;
}

.twinty .featured-items section.menu article.featured-item h3 {
  font-size: 1.1rem;
  margin: 0 0 .25em 0;
  font-family: "IBM Plex Serif", "Georgia", serif;
  font-weight: 700;
  color: inherit;
}

.twinty .featured-items section.menu article.featured-item p {
  color: #888;
  margin: 0;
  font-size: .625rem;
  display: none;
}

.twinty .featured-items section.menu article.featured-item:hover {
  box-shadow: 0px 12px 15px -8px rgba(0, 0, 15, 0.25);
}

.twinty .featured-items section.menu article.featured-item:hover a {
  opacity: 1;
  color: #d80f4b;
}

.twinty .featured-items section.menu article.featured-item:hover a:after {
  background: #d80f4b;
  width: 100%;
  transition: .2s all ease-in-out;
}

.twinty .hentry .entry-header {
  display: none;
}

.twinty.home .hentry .entry-header {
  display: block;
}

.twinty a, .twinty .site-header.featured-image .main-navigation a, .twinty .site-header.featured-image .social-navigation a, .twinty .site-header.featured-image .site-title a, .twinty .site-header.featured-image .hentry a {
  transition: .175s all ease-in-out;
}

.twinty a:hover, .twinty .site-header.featured-image .main-navigation a:hover, .twinty .site-header.featured-image .social-navigation a:hover, .twinty .site-header.featured-image .site-title a:hover, .twinty .site-header.featured-image .hentry a:hover {
  transition: .175s all ease-in-out;
}

.twinty a:hover {
  color: #d80f4b;
}

@media only screen and (min-width: 768px) {
  .twinty .site-header.featured-image .hentry .entry-header {
    margin-left: calc(2 * (100vw / 18));
    margin-right: calc(2 * (100vw / 18));
  }
  .twinty .site-header, .twinty .site-header.featured-image {
    min-height: 35vh;
  }
  .twinty .site-branding {
    margin: 0 calc(2 * (100vw / 12));
    max-width: 100%;
  }
  .twinty .featured-items section.menu {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: justify;
        justify-content: space-between;
  }
  .twinty .featured-items section.menu article.featured-item {
    -ms-flex-preferred-size: 32.33%;
        flex-basis: 32.33%;
  }
  .twinty .featured-items section.menu article.featured-item p {
    display: block;
  }
  .twinty .featured-items section.menu article.featured-item:nth-child(3n+1):nth-last-child(-n+3) ~ article.featured-item {
    margin-left: calc(1.5%);
    margin-right: auto;
  }
}

@media only screen and (min-width: 1024px) {
  .twinty .site-header nav.social-navigation {
    position: absolute;
    right: 0;
    top: 0;
    margin-top: 0;
    background: #fff;
    border-radius: 0.125rem;
    box-shadow: 0px 12px 15px -8px rgba(0, 0, 15, 0.25);
  }
  .twinty .site-header nav.social-navigation ul {
    display: -ms-flexbox;
    display: flex;
  }
  .twinty .site-header nav.social-navigation ul li {
    margin: 0;
    border-right: 1px solid rgba(0, 0, 15, 0.175);
    text-align: center;
  }
  .twinty .site-header nav.social-navigation ul li:last-child {
    border-right: none;
  }
  .twinty .site-header nav.social-navigation ul li a {
    color: #494B61;
    padding: .375rem .375rem;
  }
  .twinty .site-header nav.social-navigation ul li a svg {
    filter: none;
    width: 1rem;
    height: 1rem;
  }
  .twinty .site-header nav.social-navigation ul li a:hover, .twinty .site-header nav.social-navigation ul li a:focus {
    opacity: 1;
    color: #d80f4b;
  }
}

@media only screen and (min-width: 1168px) {
  .twinty .site-header.featured-image .hentry .entry-header {
    margin-left: calc(2 * (100vw / 12));
    margin-right: calc(2 * (100vw / 12));
  }
  .twinty .site-header nav.social-navigation ul li a {
    padding: .5rem .5rem;
  }
  .twinty .site-header nav.social-navigation ul li a svg {
    width: 1.5rem;
    height: 1.5rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
